version: '3.6'

services:

  # Create NMOS Registry/Controller container instance
  nmos-registry:
    image: rhastie/nmos-cpp:latest
    container_name: nmos-registry
    hostname: nmos-registry
    ports:
    - "80-81:80-81"
    - "1883:1883"
    volumes:
    - "./registry.json:/home/registry.json"
    environment:
    - RUN_NODE=FALSE
    networks:
      private-nmos:
      external:
        ipv4_address: '192.168.6.101'

  # Create NMOS Virtual Node container instance
  nmos-virtnode:
    image: rhastie/nmos-cpp:latest
    container_name: nmos-virtnode
    hostname: nmos-virtnode
    ports:
    - "80-81:80-81"
    volumes:
    - "./node.json:/home/node.json"
    environment:
    - RUN_NODE=TRUE
    networks:
      private-nmos:
      external:
        ipv4_address: '192.168.6.102'
    depends_on:
    - nmos-registry

  # Create AMWA NMOS Testing container instance
  nmos-testing:
    image: amwa/nmos-testing
    container_name: nmos-testing
    hostname: nmos-testing
    entrypoint: |
      /bin/sh -c "apk add avahi dbus;
      dbus-uuidgen > /var/lib/dbus/machine-id;
      mkdir -p /var/run/dbus;
      dbus-daemon --config-file=/usr/share/dbus-1/system.conf --print-address;
      avahi-daemon -D;
      python3 nmos-test.py"
    ports:
    - "5000:5000"
    volumes:
    - "./UserConfig.py:/config/UserConfig.py"
    networks:
# Temporary WA - Force container to only have a single interface so mDNS advertisements test correctly - See: https://github.com/AMWA-TV/nmos-testing/issues/214
#     private-nmos:
      external:
        ipv4_address: '192.168.1.103'
    depends_on:
    - nmos-virtnode

networks:
    private-nmos:
        # Create private network for inter-container NMOS communications
        driver: bridge
    external:
        # Create external macvlan subnet using host physical interface allowing containers to have their own IP addresses
        driver: macvlan
        driver_opts:
            parent: ens33
        ipam:
            config:
            - subnet: 192.168.6.0/24
